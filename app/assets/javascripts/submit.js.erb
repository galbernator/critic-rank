$(document).ready(function() {

  var usersFacebookID;
  var fbAccessToken;
  var usersFacebookPicture;
  var usersName;
  var usersEmail;
  var usersFacebookProfileUrl;
  var usersFacebookFriends = [];
  var likedMovies;
  var numberOfLikedMovies;
  var requestCounter = 0;
  var imdbRatingResultsArray = [];
  var rottenTomatoesRatingResultsArray = [];
  var imdbAvg;
  var rottenTomatoesAvg;
  var overallAvg;
  var currentUserID;
  var currentUserData;
  var userAndFriendsResultsArray = [];
  var allUserData;

  var loadingResultsButton = function() {
    $('#button').html('');
    $('#button').html('<button class="btn btn-lg btn-info">Calculating Your Results <span class="glyphicon glyphicon-refresh spinning"></span></button>');
  };

  // changes the button from 'find out' to 'share results'
  var changeButton = function() {
    $('#button').html('');
    $('#button').html('<button id="share-it" class="btn btn-lg btn-success">Share Your Rating</button>');
  };

  // if there is an error, show the original button to user
  var returnToOriginalButton = function() {
    $('#button').html('');
    $('#button').html('<button id="get-it" class="btn btn-lg btn-warning">Find Out Now</button>');
  }

  // calculate the overall average of both imdb abd rotten tomatoes
  var overallAverage = function() {
    overallAvg = (imdbAvg + (rottenTomatoesAvg/10))/2
    return overallAvg;
  }

  // takes the movie information and returns a list item with the movie information
  var renderResults = function (person, rank) {
    var html = '<tr><td><div class="rank-box">' + rank + '</div></td><td><img src="' + person.avatar + '" class="profile-img" /></td><td><div><div class="name">' + person.name + '</div><div class="overall-rating">' + averageControl(person.overall_average) + ' Average Rating</div></div></td><td class="rating-title"><img src="http://gallowmere.com/wp-content/uploads/2012/06/imdb-logo.png" class="imdb-logo" /><div class="rating-result">' + person.imdb_average + '</div></td><td class="rating-title"><img src="https://upload.wikimedia.org/wikipedia/en/thumb/d/dd/Rt-logo.svg/300px-Rt-logo.svg.png" class="rt-logo" /><div class="rating-result">' + person.rt_average + '%</div></td></tr>'

    $('#results').append(html);
  };

  // averages the ratings of the IMDB results in the imdbRatingResultsArray
  var averageRating = function(arrayOfMovieRatings) {
    var sum = 0
    var numberOfRatings = arrayOfMovieRatings.length
    var average = 0
    if (numberOfRatings > 0) {
      for (var i = 0; i < numberOfRatings; i += 1) {
          sum += parseFloat(arrayOfMovieRatings[i]);
      }
      average = +(sum/numberOfRatings).toFixed(2);
    } else {
      alert('Your results could not be calculated becuase no rating results were received. Please try again later.')
    }
    return average
  };

  var averageControl = function(avg) {
    if (avg.toString().length > 6) {
      return avg.toFixed(4);
    } else {
      return avg;
    }
  };


  $('#get-it').click(function() {
    OAuth.popup('facebook', function(error, result) {
      var fbAccessToken = result.access_token;
      if (error) {
        alert(error); // do something with error
        return;
      } else {
        loadingResultsButton();
        result.me().done(function (response) {
          // save the user's profile picture, name and profile url and add to hidden form
          usersFacebookPicture = response.avatar;
          usersName = response.name;
          usersFacebookProfileUrl = response.url
          // Use the ID to get the movies
          usersFacebookID = response.id;
          var userFriends;
          var userUrl = 'https://graph.facebook.com/v2.3/' + usersFacebookID + '/movies?access_token=' +
                         fbAccessToken
          var userFriendsUrl = 'https://graph.facebook.com/v2.3/' + usersFacebookID + '/friends?limit=5000&access_token=' +
                         fbAccessToken

          // get a  list user's friends to find their results later
          $.ajax({
            url: userFriendsUrl,
            dataType: 'json',
            success: function(data) {
                      userFriends = data.data;
            },
            complete: function() {
              for (var i = 0; i < userFriends.length; i += 1) {
                usersFacebookFriends.push(userFriends[i].id);
              };
              // request current users email address to be saved
              $.ajax({
                url: 'https://graph.facebook.com/v2.3/' + usersFacebookID +
                      '/?fields=email&access_token=' + fbAccessToken ,
                dataType: 'json',
                success: function(data) {
                  usersEmail = data.email;
                },
                complete: function() {
                  console.log('Users Email Address');
                  console.log(usersEmail);
                }
              })
            }
          });

          // get a user's liked movies
          $.ajax({
            url: userUrl,
            dataType: 'json',
            success: function(data) {
                      likedMovies = data.data;
                      numberOfLikedMovies = likedMovies.length;
                    },
            complete: function() {
                          if (numberOfLikedMovies === 0){
                            alert('You do not have any "Liked" movies. Please go Facebook and "Like" your favorite movies and then try again.');
                            returnToOriginalButton();
                          } else {
                            // loop through each movie in the likedMovies list
                            $.each(likedMovies, function(i, movie) {
                              var movieID = movie.id;
                              var movieTitle = movie.name;
                              var releaseDate
                              var movieUrl = 'https://graph.facebook.com/v2.3/' + movieID +
                                             '?fields=release_date&access_token=' + fbAccessToken
                              // send request to Facebook to get movie release year
                              $.ajax({
                                url: movieUrl,
                                dataType: 'json',
                                success: function(data) {
                                  if (data.release_date != undefined) {
                                    releaseDate = data.release_date.substring(data.release_date.length - 4);
                                  }
                                },
                                complete: function(data) {
                                  if (data.release_date != undefined) {
                                    // with the release year, search the OMDB database to get ratings info
                                    var movieSearchUrl = 'https://www.omdbapi.com/?t=' + movieTitle + '&y=' +
                                                          releaseDate + '&type=movie&tomatoes=true&plot=short&r=json'
                                  } else {
                                    var movieSearchUrl = 'https://www.omdbapi.com/?t=' + movieTitle +
                                                          '&type=movie&tomatoes=true&plot=short&r=json'
                                  }
                                  $.ajax({
                                    url: movieSearchUrl,
                                    dataType: 'json',
                                    success: function(data) {
                                      requestCounter += 1;
                                      var imdbRating = data.imdbRating;
                                      var rottenTomatoesRating = data.tomatoMeter;
                                      if (isNaN(parseFloat(imdbRating)) === false) {
                                        imdbRatingResultsArray.push(imdbRating);
                                      }
                                      if (isNaN(parseFloat(rottenTomatoesRating)) === false) {
                                        rottenTomatoesRatingResultsArray.push(rottenTomatoesRating);
                                      }
                                      console.log(movieTitle + '(' + releaseDate + '): IMDB-' + imdbRating + ' RT-' + rottenTomatoesRating);
                                    },
                                    complete: function() {
                                      // when all of the requests have completed, calculate averages, render results on page by calling renderResults, and save user
                                      if (requestCounter === numberOfLikedMovies) {
                                        imdbAvg = averageRating(imdbRatingResultsArray);
                                        rottenTomatoesAvg = averageRating(rottenTomatoesRatingResultsArray);
                                        overallAvg = overallAverage(imdbAvg, rottenTomatoesAvg);


                                        // get all of the friends database to eventually by able to find all the current user's friends
                                        $.ajax({
                                          url: '/friends',
                                          dataType: 'json',
                                          success: function(data) {
                                            allFriendsData = data;
                                          },
                                          complete: function() {

                                          }
                                        })
                                        // save users and rating results to the database
                                        $.ajax({ url: '/users',
                                                 type: 'POST',
                                                 beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                                                 data: { facebook_id: usersFacebookID, name: usersName, email: usersEmail, facebook_picture: usersFacebookPicture, facebook_url: usersFacebookProfileUrl, imdb_avg: imdbAvg, rt_avg: rottenTomatoesAvg, overall_avg: overallAvg },
                                                 success: function(response) {
                                                 },
                                                 complete: function() {
                                                   $.ajax({
                                                      url: '/users',
                                                      dataType: 'json',
                                                      success: function(data) {
                                                        // find the current user's id from all users
                                                        for (var i = 0; i< data.length; i += 1) {
                                                          if (usersFacebookID === data[i].facebook_id) {
                                                            currentUserID = data[i].id;
                                                            currentUserData = data[i];
                                                            document.cookie="current_user=" + currentUserID;
                                                          }
                                                        }
                                                      },
                                                      complete: function(data) {
                                                        allUserData = data.responseJSON;
                                                        for (var i = 0; i < usersFacebookFriends.length; i += 1){
                                                          var friend = usersFacebookFriends[i];
                                                          for (var j = 0; j < allUserData.length; j += 1) {
                                                            if (allUserData[j].facebook_id === friend) {
                                                              userAndFriendsResultsArray.push({ name: allUserData[j].name, avatar: allUserData[j].facebook_picture, overall_average: allUserData[j].overall_avg, imdb_average: allUserData[j].imdb_avg, rt_average: allUserData[j].rt_avg });
                                                            }
                                                          }
                                                        }
                                                        // add the current user to the userAndFriendsResultsArray
                                                        userAndFriendsResultsArray.push({ name: usersName, avatar: usersFacebookPicture, overall_average: overallAvg, imdb_average: imdbAvg, rt_average: rottenTomatoesAvg });
                                                        userAndFriendsResultsArray = userAndFriendsResultsArray.sort(function(obj1, obj2) {
                                                      // Ascending: first age less than the previous
                                                       return obj2.overall_average - obj1.overall_average;
                                                        });


                                                        // loop throguh the array and assign the friend's rank
                                                        for (var i = 0; i < userAndFriendsResultsArray.length; i += 1) {
                                                          var rank;
                                                          if (userAndFriendsResultsArray.length === 1) {
                                                            rank = '<div class="share">Share to see your rank!</div>'
                                                          } else if (i > 1 && userAndFriendsResultsArray[i].overall_average === userAndFriendsResultsArray[i-1].overall_average) {
                                                            // in case there are 3 in a row that are tied (thinking that the probability of more than 3 people being tied is an extreme edge case)
                                                            if (i > 2 && userAndFriendsResultsArray[i-1].overall_average === userAndFriendsResultsArray[i-2].overall_average) {
                                                              rank = i - 1;
                                                            } else {
                                                              rank = i
                                                            }
                                                          } else {
                                                            rank = i + 1;
                                                          }
                                                          renderResults(userAndFriendsResultsArray[i], rank );
                                                          // find a way to make sure that the addition to the list is unique
                                                        }
                                                        changeButton();

                                                        // set the meta data for Facebook Graph sharing markup
                                                        $('meta[property="og:title"]').prop('content','My Critic Rank is ' + currentUserData.overall_avg + ' out of 10. Can you beat me?');
                                                        $('meta[property="og:critic_rating"]').prop('content',overallAvg);

                                                        // save the current user's friends to the Friends table
                                                        $.each(userFriends, function(i, friend) {
                                                          $.ajax({
                                                            url: '/friends',
                                                            type: 'POST',
                                                            beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                                                            data: { facebook_id: friend.id, user_id: currentUserID },
                                                            success: function() {
                                                              // get information for each friend and save the variables to render them
                                                            },
                                                            complete: function() {

                                                            }
                                                          })
                                                        })

                                                      }
                                                    })
                                                  }
                                            })
                                            .fail(function(error){
                                            });
                                      }
                                    }
                                  })
                                }
                              })
                            })
                          };
                      }
            });
        })
        .fail(function (err) {
            //handle error with err
        });
      }
    });
  });

  $(document).on('click', '#share-it', function() {

    // create the Facebook Open Graph URL
    var fbAppId = 626000787502874;
    var fbAppUrl = $('meta[property="og:url"]').prop('content');
    var fbAppDescription = $('meta[property="og:description"]').prop('content');
    var fbAppTitle = $('meta[property="og:title"]').prop('content');
    var fbAppImage = $('meta[property="og:image"]').prop('content');

    var url = 'http://www.facebook.com/dialog/feed?app_id=' + fbAppId +
        '&link=' + fbAppUrl +
        '&picture=' + fbAppImage +
        '&name=' + fbAppTitle +
        '&description=' + fbAppDescription +
        '&redirect_uri=https://criticrank.herokuapp.com/popupclose.html' +
        '&display=popup';

    var openShareWindow = function(url) {
      window.open(url,
                'feedDialog',
                'toolbar=0,status=0,width=626,height=436'
              );

    }

    openShareWindow(url);



  })
});
